@using ERP_Component_DAL.Models;


@{
    ViewBag.Title = "Inventory Management";

}

<link rel="stylesheet" href="~/css/Product.css">

@model Product







<div id="product" class="container" style="display:block">
    <form method="post" asp-action="AddStock" asp-controller="Inventory" onsubmit="return savedDetail()">


        <div class="form-section">
            <h3>Add Item</h3>

            <div class="form-row" style="">


                <label class="required" for="TransactionType">Reason for Item Entry:</label>
                <input type="text" name="Perticulars" value="By Purchase" readonly />
                <label class="required" for="StockDate">Transaction Date:</label>
                <input type="text"  value="@DateTime.Now.ToString("yyyy-MM-dd")" readonly />

                <input type="hidden" name="StockDate" value="@DateTime.Now" readonly />
                <input type="hidden" name="TransactionType" value="IN" readonly />
                <input type="hidden" name="type" value="LOT" readonly />           
          
        

            </div>



            <div class="form-row">
                     <label class="required" for="category">Category:</label>
                <select name="categoryId" id="role" onchange="getName()">
                    <option  >Select</option>
          
                    @foreach (var category in Model.category)
                    {
                        <option value="@category.categoryId">@category.categoryName</option>
                    }
         
                </select>    



               <label class="required" for="subCategory">Sub-category:</label>
                <select id="SubCategory" name="subCategoryId" onchange="getProducts()">
                    <option selected disabled>Select</option>

                </select>
            </div>
          
            
            
            <div class="form-row">
                <label class="required" for="productName">Item Name:</label>
                <select id="Productname" name="itemId">
                    <option value ="0">Select</option>
                </select>


                <label class="" for="batch">Batch Number:</label>
                <input type="text" name="lotSeries">
                <input type="hidden" name="itemName"  id="itemNameID" />
            
              
              
            </div>


            <div class="form-row">           


                <label class="required" for="sku">Invoice Date:</label>
                <input type="date" name="InvoiceDate" required />
         

                <label class="" for="invoice">Invoice Number:</label>
                <input type="text" name="invoice" />
            </div>
            <div class="form-row">

            

                <label for="descr">Quantity Purchased:</label>
                <input type="number" name="quantity">

                <label for="unitPrice">Price:</label>
                <input type="text" name="unitPrice" />
           
            </div>
     

           <div class="form-row">

                <label class="required" for="ExpiryDate">Expiry Date:</label>
                <input type="date" name="ExpiryDate" required />

                <label class="required" for="ExpiryDate">Vendor Name:</label>
                <input type="text" name="VendorName" required />
        @*         <label class="required" for="msl">Warrenty Period:</label>
                <select id="warrantyDropdown" name="warrenty">
                    <option selected>Select Warrenty Period</option>

                    @foreach (var war in Model.warrenty)
                        {
                            <option value="@war.warrentyID">@war.PeriodName</option>
                        }
              
                    <option value="add_new">+ Add New Warrenty Period</option>
                </select> *@
           </div>
            
        </div>



        


        <div class="button-container">
            <button class="btn btn-success" type="submit">Submit</button>
            <button class="btn btn-secondary" type="button" onclick="getTransactionRecord()">View</button>
        </div>
    </form>
</div> 


@if(@Model.items.Count > 0)
{
<div id="product" class="container" style="display:block">

    <div class="form-section">
        <h3>Added Item Info</h3>
        <div class="table-container" style="margin-top:40px">
            <table class="product-table">
                <thead>
                    <tr>
                        <th>Sno.</th>                 
                        <th>Item Name</th>
                        <th>Batch Number</th>
                        <th>Invoice Date</th>
                        <th>Invoice Number</th>
                        <th>Quantity Purchased</th>
                            <th>Price</th>
                            <th>Expiry Date</th>

                    </tr>
                </thead>
                <tbody id="geeks">


                    @for (var i = 0; i < Model.items.Count; i++)
                    {

                        var x = Model.items[i];
                        var index = i + 1;

                        <tr id="row-@x.">
                            <td>@index</td>
                            <td>@x.itemName</td>
                            <td>@x.lotSeries</td>
                            <td>@x.InvoiceDate</td>
                            <td>@x.invoice</td>
                            <td>@x.quantity</td>
                            <td>@x.unitPrice</td>
                            <td>@x.ExpiryDate</td>
                           
                        </tr>
                    }
                </tbody>

            </table>

        </div>

    </div>

</div>


}


<script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>


<script>

        function getName() {
        var Id = $("#role").val();

        $.ajax({
            type: "GET",
            url: "/Inventory/SubCategoriesNames",
            contentType: "application/json; charset=utf-8",
            dataType: "json",
            data: { categoryId: Id },
                success: function (response) {
    
        if (response.length > 0) {
            $("#SubCategory").empty();
            $("#SubCategory").append('<option selected disabled>Select</option>');
            response.forEach(function (item) {
                console.log("Each item:", item);
                $("#SubCategory").append('<option value="' + item.subCategoryId  + '">' + item.categoryName + '</option>');
            });
        } else {
            $("#SubCategory").empty().append('<option selected disabled>No SubCategory Found</option>');
        }
    },

            error: function (xhr, status, error) {
                console.error("AJAX Error: ", error);
                console.error("Status: ", status);
                console.error("Response: ", xhr.responseText);
                alert("Error fetching user data. Check console for details.");
            }
        });
    }



    function getProducts() {
        var Id = $("#SubCategory").val();

        $.ajax({
            type: "GET",
            url: "/Inventory/GetProductBasedonCategory",
            contentType: "application/json; charset=utf-8",
            dataType: "json",
            data: { SubCategoryID: Id },
            success: function (response) {
                console.log("Subcategories response:", response);
                if (response.length > 0) {
                    itemData = {};
                    $("#Productname").empty();
                    $("#Productname").append('<option selected disabled>Select</option>');
                    response.forEach(function (item) {
                        console.log("Each item:", item);
                        $("#Productname").append('<option value="' + item.itemId + '">' + item.itemName + '</option>');
                       
                    });
                } else {
                    $("#Productname").empty().append('<option selected disabled>No Product Found</option>');
                }
            },

            error: function (xhr, status, error) {
                console.error("AJAX Error: ", error);
                console.error("Status: ", status);
                console.error("Response: ", xhr.responseText);
                alert("Error fetching user data. Check console for details.");
            }
        });
    }


    $('#Productname').change(function () {
    
        var selectedValue = $(this).val();

  
        var selectedText = $('#Productname option:selected').text();

        $('#itemNameID').val(selectedText);
       

    });

    function getTransactionRecord() {
        const selectedId = $('#Productname').val(); // Assuming your select has this ID
            var filterValue = "IN"
        if (selectedId) {
            // Construct the URL dynamically
               window.location.href = `/Inventory/ViewTransaction?id=${selectedId}&filter=${encodeURIComponent(filterValue)}`;
        } else {
            window.location.href = `/Inventory/ViewTransaction?filter=${encodeURIComponent(filterValue)}`;
        }
    }
</script>

<script>
      function savedDetail(){
                Swal.fire({
      position: "center",
      icon: "success",
      title: "Your work has been saved",
      showConfirmButton: false,
      timer: 1500
    });
    }
</script>