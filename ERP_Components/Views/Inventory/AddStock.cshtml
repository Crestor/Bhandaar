@using ERP_Component_DAL.Models;


@{
    ViewBag.Title = "Inventory Management";
    string createdby = Context.Session.GetString("UserId");
}

<link rel="stylesheet" href="~/css/Product.css">

@model List<Product>







<div id="product" class="container" style="display:block">
    <form method="post" asp-action="SetStock" asp-controller="Inventory" onsubmit="return savedDetail()">


        <div class="form-section">
            <h3>Add Item</h3>

            <div class="form-row" style="width:50%">


                <label class="required" for="TransactionType">Reason for Item Entry:</label>
                <input type="hidden" name="TransactionType" value="IN" readonly />
                <input type="text"  name="Perticulars" value="By Purchase" readonly />
                <input type="hidden" name="type" value="LOT" readonly />
                <input type="hidden" name="StockDate" value="@DateTime.Now" readonly />
                <input type="hidden" name="CreatedBY" value="@createdby" />
                <input type="hidden" name="SourceDC" value="8CA42812-F890-47D8-A5D8-794A6931E98B" />
                <input type="hidden" name="DestinationDC" value="EF229FAC-4171-42D4-B0F1-5A4B8A5E22CB" />

            </div>



            <div class="form-row">
                     <label class="required" for="category">Category:</label>
                <select name="categoryId" id="role" onchange="getName()">
                    <option  >Select</option>
                @foreach (var scheme in Model)
                {
                    @foreach (var category in scheme.category)
                    {
                        <option value="@category.categoryId">@category.categoryName</option>
                    }
                }
                </select>    



               <label class="required" for="subCategory">Sub-category:</label>
                <select id="SubCategory" name="subCategoryId" onchange="getProducts()">
                    <option selected disabled>Select</option>

                </select>
            </div>
          
            
            
            <div class="form-row">
                <label class="required" for="productName">Item Name:</label>
                <select id="Productname" name="itemId">
                    <option value ="0">Select</option>
                </select>


                <label class="" for="batch">Batch Number:</label>
                <input type="text" name="lotSeries">
            
              
              
            </div>


            <div class="form-row">           


                <label class="required" for="sku">Invoice Date:</label>
                <input type="date" name="InvoiceDate" required />
         

                <label class="" for="invoice">Invoice Number:</label>
                <input type="text" name="invoice" />
            </div>
            <div class="form-row">

            

                <label for="descr">Quantity Purchased:</label>
                <input type="number" name="quantity">

                <label for="unitPrice">Price:</label>
                <input type="text" name="unitPrice" />
           
            </div>
     

           <div class="form-row">

                <label class="required" for="ExpiryDate">Expiry Date:</label>
                <input type="date" name="ExpiryDate" required />


                <label class="required" for="msl">Warrenty Period:</label>
                <select id="warrantyDropdown" name="warrenty">
                    <option selected>Select Warrenty Period</option>
                    @foreach (var scheme in Model)
                    {
                        @foreach (var war in scheme.warrenty)
                        {
                            <option value="@war.warrentyID">@war.PeriodName</option>
                        }
                    }
                    <option value="add_new">+ Add New Warrenty Period</option>
                </select>
           </div>
            
        </div>



        


        <div class="button-container">
            <button class="btn btn-success" type="submit">Submit</button>
            <button class="btn btn-secondary" type="reset">Reset</button>
        </div>
    </form>
</div> 






<script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>


<script>

        function getName() {
        var Id = $("#role").val();

        $.ajax({
            type: "GET",
            url: "/Inventory/SubCategoriesNames",
            contentType: "application/json; charset=utf-8",
            dataType: "json",
            data: { categoryId: Id },
                success: function (response) {
    
        if (response.length > 0) {
            $("#SubCategory").empty();
            $("#SubCategory").append('<option selected disabled>Select</option>');
            response.forEach(function (item) {
                console.log("Each item:", item);
                $("#SubCategory").append('<option value="' + item.subCategoryId  + '">' + item.categoryName + '</option>');
            });
        } else {
            $("#SubCategory").empty().append('<option selected disabled>No SubCategory Found</option>');
        }
    },

            error: function (xhr, status, error) {
                console.error("AJAX Error: ", error);
                console.error("Status: ", status);
                console.error("Response: ", xhr.responseText);
                alert("Error fetching user data. Check console for details.");
            }
        });
    }



    function getProducts() {
        var Id = $("#SubCategory").val();

        $.ajax({
            type: "GET",
            url: "/Inventory/GetProductBasedonCategory",
            contentType: "application/json; charset=utf-8",
            dataType: "json",
            data: { SubCategoryID: Id },
            success: function (response) {
                console.log("Subcategories response:", response);
                if (response.length > 0) {
                    itemData = {};
                    $("#Productname").empty();
                    $("#Productname").append('<option selected disabled>Select</option>');
                    response.forEach(function (item) {
                        console.log("Each item:", item);
                        $("#Productname").append('<option value="' + item.itemId + '">' + item.itemName + '</option>');
                       
                    });
                } else {
                    $("#Productname").empty().append('<option selected disabled>No Product Found</option>');
                }
            },

            error: function (xhr, status, error) {
                console.error("AJAX Error: ", error);
                console.error("Status: ", status);
                console.error("Response: ", xhr.responseText);
                alert("Error fetching user data. Check console for details.");
            }
        });
    }


    // function updateWarrantyDropdown(item) {
    //     const warrantyValue = item.warranty; // e.g., 12
    //     const $warrantyDropdown = $("#WarrantyPeriod");

    //     if (warrantyValue) {
    //         $warrantyDropdown.val(warrantyValue.toString());
    //     } else {
    //         $warrantyDropdown.val(null); // clear selection
    //     }
    // }

</script>

<script>
      function savedDetail(){
                Swal.fire({
      position: "center",
      icon: "success",
      title: "Your work has been saved",
      showConfirmButton: false,
      timer: 1500
    });
    }
</script>